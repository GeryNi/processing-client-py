# coding: utf-8

"""


    
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OrgEclipseMicroprofileOpenapiModelsPathItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'summary': 'str',
        'trace': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'head': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'post': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'description': 'str',
        'options': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'put': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'patch': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'delete': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'operations': 'list[object]',
        'servers': 'list[OrgEclipseMicroprofileOpenapiModelsServersServer]',
        'get': 'OrgEclipseMicroprofileOpenapiModelsOperation',
        'parameters': 'list[OrgEclipseMicroprofileOpenapiModelsParametersParameter]'
    }

    attribute_map = {
        'summary': 'summary',
        'trace': 'TRACE',
        'head': 'HEAD',
        'post': 'POST',
        'description': 'description',
        'options': 'OPTIONS',
        'put': 'PUT',
        'patch': 'PATCH',
        'delete': 'DELETE',
        'operations': 'operations',
        'servers': 'servers',
        'get': 'GET',
        'parameters': 'parameters'
    }

    def __init__(self, summary=None, trace=None, head=None, post=None, description=None, options=None, put=None, patch=None, delete=None, operations=None, servers=None, get=None, parameters=None):  # noqa: E501
        """OrgEclipseMicroprofileOpenapiModelsPathItem - a model defined in Swagger"""  # noqa: E501
        self._summary = None
        self._trace = None
        self._head = None
        self._post = None
        self._description = None
        self._options = None
        self._put = None
        self._patch = None
        self._delete = None
        self._operations = None
        self._servers = None
        self._get = None
        self._parameters = None
        self.discriminator = None
        if summary is not None:
            self.summary = summary
        if trace is not None:
            self.trace = trace
        if head is not None:
            self.head = head
        if post is not None:
            self.post = post
        if description is not None:
            self.description = description
        if options is not None:
            self.options = options
        if put is not None:
            self.put = put
        if patch is not None:
            self.patch = patch
        if delete is not None:
            self.delete = delete
        if operations is not None:
            self.operations = operations
        if servers is not None:
            self.servers = servers
        if get is not None:
            self.get = get
        if parameters is not None:
            self.parameters = parameters

    @property
    def summary(self):
        """Gets the summary of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The summary of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param summary: The summary of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def trace(self):
        """Gets the trace of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The trace of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._trace

    @trace.setter
    def trace(self, trace):
        """Sets the trace of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param trace: The trace of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._trace = trace

    @property
    def head(self):
        """Gets the head of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The head of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._head

    @head.setter
    def head(self, head):
        """Sets the head of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param head: The head of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._head = head

    @property
    def post(self):
        """Gets the post of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The post of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._post

    @post.setter
    def post(self, post):
        """Sets the post of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param post: The post of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._post = post

    @property
    def description(self):
        """Gets the description of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The description of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param description: The description of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def options(self):
        """Gets the options of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The options of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param options: The options of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._options = options

    @property
    def put(self):
        """Gets the put of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The put of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._put

    @put.setter
    def put(self, put):
        """Sets the put of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param put: The put of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._put = put

    @property
    def patch(self):
        """Gets the patch of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The patch of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._patch

    @patch.setter
    def patch(self, patch):
        """Sets the patch of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param patch: The patch of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._patch = patch

    @property
    def delete(self):
        """Gets the delete of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The delete of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param delete: The delete of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._delete = delete

    @property
    def operations(self):
        """Gets the operations of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The operations of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: list[object]
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param operations: The operations of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: list[object]
        """

        self._operations = operations

    @property
    def servers(self):
        """Gets the servers of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The servers of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: list[OrgEclipseMicroprofileOpenapiModelsServersServer]
        """
        return self._servers

    @servers.setter
    def servers(self, servers):
        """Sets the servers of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param servers: The servers of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: list[OrgEclipseMicroprofileOpenapiModelsServersServer]
        """

        self._servers = servers

    @property
    def get(self):
        """Gets the get of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The get of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsOperation
        """
        return self._get

    @get.setter
    def get(self, get):
        """Sets the get of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param get: The get of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsOperation
        """

        self._get = get

    @property
    def parameters(self):
        """Gets the parameters of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501


        :return: The parameters of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :rtype: list[OrgEclipseMicroprofileOpenapiModelsParametersParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this OrgEclipseMicroprofileOpenapiModelsPathItem.


        :param parameters: The parameters of this OrgEclipseMicroprofileOpenapiModelsPathItem.  # noqa: E501
        :type: list[OrgEclipseMicroprofileOpenapiModelsParametersParameter]
        """

        self._parameters = parameters

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrgEclipseMicroprofileOpenapiModelsPathItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgEclipseMicroprofileOpenapiModelsPathItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
