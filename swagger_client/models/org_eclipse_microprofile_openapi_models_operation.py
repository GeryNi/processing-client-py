# coding: utf-8

"""


    
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OrgEclipseMicroprofileOpenapiModelsOperation(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'summary': 'str',
        'security': 'list[OrgEclipseMicroprofileOpenapiModelsSecuritySecurityRequirement]',
        'servers': 'list[OrgEclipseMicroprofileOpenapiModelsServersServer]',
        'request_body': 'OrgEclipseMicroprofileOpenapiModelsParametersRequestBody',
        'deprecated': 'bool',
        'description': 'str',
        'operation_id': 'str',
        'responses': 'OrgEclipseMicroprofileOpenapiModelsResponsesAPIResponses',
        'callbacks': 'list[object]',
        'external_docs': 'OrgEclipseMicroprofileOpenapiModelsExternalDocumentation',
        'parameters': 'list[OrgEclipseMicroprofileOpenapiModelsParametersParameter]',
        'tags': 'list[str]'
    }

    attribute_map = {
        'summary': 'summary',
        'security': 'security',
        'servers': 'servers',
        'request_body': 'requestBody',
        'deprecated': 'deprecated',
        'description': 'description',
        'operation_id': 'operationId',
        'responses': 'responses',
        'callbacks': 'callbacks',
        'external_docs': 'externalDocs',
        'parameters': 'parameters',
        'tags': 'tags'
    }

    def __init__(self, summary=None, security=None, servers=None, request_body=None, deprecated=None, description=None, operation_id=None, responses=None, callbacks=None, external_docs=None, parameters=None, tags=None):  # noqa: E501
        """OrgEclipseMicroprofileOpenapiModelsOperation - a model defined in Swagger"""  # noqa: E501
        self._summary = None
        self._security = None
        self._servers = None
        self._request_body = None
        self._deprecated = None
        self._description = None
        self._operation_id = None
        self._responses = None
        self._callbacks = None
        self._external_docs = None
        self._parameters = None
        self._tags = None
        self.discriminator = None
        if summary is not None:
            self.summary = summary
        if security is not None:
            self.security = security
        if servers is not None:
            self.servers = servers
        if request_body is not None:
            self.request_body = request_body
        if deprecated is not None:
            self.deprecated = deprecated
        if description is not None:
            self.description = description
        if operation_id is not None:
            self.operation_id = operation_id
        if responses is not None:
            self.responses = responses
        if callbacks is not None:
            self.callbacks = callbacks
        if external_docs is not None:
            self.external_docs = external_docs
        if parameters is not None:
            self.parameters = parameters
        if tags is not None:
            self.tags = tags

    @property
    def summary(self):
        """Gets the summary of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The summary of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param summary: The summary of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def security(self):
        """Gets the security of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The security of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: list[OrgEclipseMicroprofileOpenapiModelsSecuritySecurityRequirement]
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param security: The security of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: list[OrgEclipseMicroprofileOpenapiModelsSecuritySecurityRequirement]
        """

        self._security = security

    @property
    def servers(self):
        """Gets the servers of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The servers of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: list[OrgEclipseMicroprofileOpenapiModelsServersServer]
        """
        return self._servers

    @servers.setter
    def servers(self, servers):
        """Sets the servers of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param servers: The servers of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: list[OrgEclipseMicroprofileOpenapiModelsServersServer]
        """

        self._servers = servers

    @property
    def request_body(self):
        """Gets the request_body of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The request_body of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsParametersRequestBody
        """
        return self._request_body

    @request_body.setter
    def request_body(self, request_body):
        """Sets the request_body of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param request_body: The request_body of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsParametersRequestBody
        """

        self._request_body = request_body

    @property
    def deprecated(self):
        """Gets the deprecated of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The deprecated of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: bool
        """
        return self._deprecated

    @deprecated.setter
    def deprecated(self, deprecated):
        """Sets the deprecated of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param deprecated: The deprecated of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: bool
        """

        self._deprecated = deprecated

    @property
    def description(self):
        """Gets the description of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The description of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param description: The description of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def operation_id(self):
        """Gets the operation_id of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The operation_id of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param operation_id: The operation_id of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: str
        """

        self._operation_id = operation_id

    @property
    def responses(self):
        """Gets the responses of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The responses of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsResponsesAPIResponses
        """
        return self._responses

    @responses.setter
    def responses(self, responses):
        """Sets the responses of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param responses: The responses of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsResponsesAPIResponses
        """

        self._responses = responses

    @property
    def callbacks(self):
        """Gets the callbacks of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The callbacks of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: list[object]
        """
        return self._callbacks

    @callbacks.setter
    def callbacks(self, callbacks):
        """Sets the callbacks of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param callbacks: The callbacks of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: list[object]
        """

        self._callbacks = callbacks

    @property
    def external_docs(self):
        """Gets the external_docs of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The external_docs of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: OrgEclipseMicroprofileOpenapiModelsExternalDocumentation
        """
        return self._external_docs

    @external_docs.setter
    def external_docs(self, external_docs):
        """Sets the external_docs of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param external_docs: The external_docs of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: OrgEclipseMicroprofileOpenapiModelsExternalDocumentation
        """

        self._external_docs = external_docs

    @property
    def parameters(self):
        """Gets the parameters of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The parameters of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: list[OrgEclipseMicroprofileOpenapiModelsParametersParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param parameters: The parameters of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: list[OrgEclipseMicroprofileOpenapiModelsParametersParameter]
        """

        self._parameters = parameters

    @property
    def tags(self):
        """Gets the tags of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501


        :return: The tags of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :rtype: list[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this OrgEclipseMicroprofileOpenapiModelsOperation.


        :param tags: The tags of this OrgEclipseMicroprofileOpenapiModelsOperation.  # noqa: E501
        :type: list[str]
        """

        self._tags = tags

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrgEclipseMicroprofileOpenapiModelsOperation, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgEclipseMicroprofileOpenapiModelsOperation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
